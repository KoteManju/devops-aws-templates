---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template Version 0.1.0. Launch an Amazon Linux EC2
  instance within a ASG to maintain HA/FT.
Mappings:
  AWSInstanceType2Arch:
    # If new instance types need to be added, this list would need to be updated.
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.large:
      Arch: HVM64

  # The AMI's for this template as well as the regions are not all up to date. You can get more details here
  # and add regions per requirements:
  # https://wiki.debian.org/Cloud/AmazonEC2Image/Jessie
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-49e5cb5e
    us-west-1:
      HVM64: ami-db6c39bb
    us-west-2:
      HVM64: ami-8f7bd9ef
    ap-southeast-1:
      HVM64: ami-0e6dce6d

# This parameter list is used for the AWS Cloudformation GUI, when creating/updating
# a stack
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Instance Settings
      Parameters:
      - InstanceType
      - StorageSize
      - KeyName
      - OperatorEmail
    - Label:
        default: Network Settings
      Parameters:
      - VPCID
      - SubnetPublic1
      - SubnetPublic2
      - SSHLocation
    - Label:
        default: Tags
      Parameters:
      - TagName
      - TagOwner
      - TagClient
      - TagProject
      - TagEnvironment

Parameters:
  InstanceType:
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: This is the instance size and type. Needs to be in the standard AWS format. Not all the AWS instance types are in the AllowedValues, so that should be updated per requirements.
    Type: String
  StorageSize:
    Default: 8
    Description: The amount of EBS Storage that should be alloctaed for this instance.
    MaxValue: 200
    MinValue: 8
    Type: Number
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    # Default: ssh-key-pair
    Description: The Key Pair that will be used to allow SSH into this instance. This Key will need to be created before running this template.
    Type: AWS::EC2::KeyPair::KeyName
  OperatorEmail:
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
    # Default: name@host.com
    Description: This email will be used as the default subscription for the SNS Topic, notifying the user of updates/errors for the instance. Additional subscribers can be added post creation.
    Type: String
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    # Default: x.x.x.x/32
    Description: The IP Range that will be whitelisted on port 22 to allow SSH to the EC2 instances. Set this as your external IP. WARNING - make sure this is a secure IP Range
    MaxLength: 18
    MinLength: 9
    Type: String
  VPCID:
    # Default: vpc-id
    Description: This is the VPC that the instance will be deployed inside.
    Type: AWS::EC2::VPC::Id
  SubnetPublic1:
    # Default: subnet-id1
    Description: This is the first public subnet should that be part of the VPC listed above.
    Type: AWS::EC2::Subnet::Id
  SubnetPublic2:
    # Default: subnet-id2
    Description: This is the second public subnet that should be part of the VPC listed above.
    Type: AWS::EC2::Subnet::Id
  TagClient:
    # Default: client-name
    Description: Tag used for tracking purposes.
    MaxLength: 127
    MinLength: 1
    Type: String
  TagEnvironment:
    AllowedValues:
    - dev
    - qa
    - stg
    - prod
    - test
    # Default: dev
    Description: Tag used for tracking purposes.
    MaxLength: 127
    MinLength: 1
    Type: String
  TagName:
    # Default: tag-name
    Description: Tag used for tracking purposes.
    MaxLength: 127
    MinLength: 1
    Type: String
  TagOwner:
    # Default: name@host.com
    Description: Tag used for tracking purposes.
    MaxLength: 127
    MinLength: 1
    Type: String
  TagProject:
    # Default: tag-project
    Description: Tag used for tracking purposes.
    MaxLength: 127
    MinLength: 1
    Type: String
  UserDataScript:
    # Default: echo sample init script
    Description: You can append additional scripting to the UserData which will run on boot. Make sure that commands are seperated by ; or &&
    Type: String

Resources:

  AssumeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - ec2:DescribeInstances
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: DescribeInstances

  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - Ref: NotificationTopic
      # - Ref: WebServerScaleUpPolicy
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref ServerASG
      EvaluationPeriods: 2
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 300
      Statistic: Average
      Threshold: 90

  # CPUAlarmLow:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmActions:
  #     - Ref: NotificationTopic
  #     - Ref: WebServerScaleDownPolicy
  #     AlarmDescription: Scale-down if CPU < 70% for 10 minutes
  #     ComparisonOperator: LessThanThreshold
  #     Dimensions:
  #     - Name: AutoScalingGroupName
  #       Value:
  #         !Ref ServerASG
  #     EvaluationPeriods: 2
  #     MetricName: CPUUtilization
  #     Namespace: AWS/EC2
  #     Period: 300
  #     Statistic: Average
  #     Threshold: 70

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort: 0
        IpProtocol: tcp
        ToPort: 65535
      SecurityGroupIngress:
      - CidrIp:
          !Ref SSHLocation
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      Tags:
      - Key: Name
        Value:
          !Ref TagName
      - Key: client
        Value:
          !Ref TagClient
      - Key: owner
        Value:
          !Ref TagOwner
      - Key: project
        Value:
          !Ref TagProject
      - Key: environment
        Value:
          !Ref TagEnvironment
      VpcId:
        !Ref VPCID

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref StorageSize
      AssociatePublicIpAddress: true
      IamInstanceProfile:
        !Ref RootInstanceProfile
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - !Ref AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType:
        !Ref InstanceType
      KeyName:
        !Ref KeyName
      SecurityGroups:
      - !Ref InstanceSecurityGroup
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash
          #Initial profile check
          source /etc/profile
          ${UserDataScript}

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          !Ref OperatorEmail
        Protocol: email

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref AssumeRole

  ServerASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName:
        !Ref LaunchConfig
      MaxSize: 2
      MinSize: 1
      NotificationConfigurations:
      - NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        TopicARN:
          !Ref NotificationTopic
      Tags:
      - Key: Name
        PropagateAtLaunch: 'true'
        Value:
          !Ref TagName
      - Key: client
        PropagateAtLaunch: 'true'
        Value:
          !Ref TagClient
      - Key: owner
        PropagateAtLaunch: 'true'
        Value:
          !Ref TagOwner
      - Key: project
        PropagateAtLaunch: 'true'
        Value:
          !Ref TagProject
      - Key: environment
        PropagateAtLaunch: 'true'
        Value:
          !Ref TagEnvironment
      VPCZoneIdentifier:
      - !Ref SubnetPublic1
      - !Ref SubnetPublic2
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: 1

  # WebServerScaleDownPolicy:
  #   Type: AWS::AutoScaling::ScalingPolicy
  #   Properties:
  #     AdjustmentType: ChangeInCapacity
  #     AutoScalingGroupName:
  #       !Ref ServerASG
  #     Cooldown: 60
  #     ScalingAdjustment: -1
  #   Type: AWS::AutoScaling::ScalingPolicy
  # WebServerScaleUpPolicy:
  #   Properties:
  #     AdjustmentType: ChangeInCapacity
  #     AutoScalingGroupName:
  #       !Ref ServerASG
  #     Cooldown: 60
  #     ScalingAdjustment: 1
