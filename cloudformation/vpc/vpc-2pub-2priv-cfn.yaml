Description: >
    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

Parameters:

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.10.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.0.3.0/24

    TagName:
        Description: Tag used for Name of the resource
        MaxLength: 127
        MinLength: 1
        Type: String

    TagOwner:
        Description: Tag used for the owner of the resource created (email address).
        MaxLength: 127
        MinLength: 1
        Type: String

    TagClient:
        Description: Tag used for client of the resource
        MaxLength: 127
        MinLength: 1
        Type: String

    TagProject:
        Description: Tag used for project associated with resource.
        MaxLength: 127
        MinLength: 1
        Type: String

    TagEnvironment:
        AllowedValues:
        - dev
        - qa
        - stg
        - prd
        - test
        Default: dev
        Description: Tag used for environment associated with resource.
        MaxLength: 127
        MinLength: 1
        Type: String

Resources:

    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-vpc
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-ig
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-pub-subnet-1
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-pub-subnet-2
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-priv-subnet-1
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-priv-subnet-2
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-pub-routes
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-priv-routes-1
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${TagName}-priv-routes-2
                - Key: client
                  Value: !Ref TagClient
                - Key: owner
                  Value: !Ref TagOwner
                - Key: project
                  Value: !Ref TagProject
                - Key: environment
                  Value: !Ref TagEnvironment

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

Outputs:

    VPC:
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${AWS::StackName}-VPC

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
            Name: !Sub ${AWS::StackName}-PublicSubnets

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
            Name: !Sub ${AWS::StackName}-PrivateSubnets

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${AWS::StackName}-PublicSubnet1

    PublicSubnet2:
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${AWS::StackName}-PublicSubnet2

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${AWS::StackName}-PrivateSubnet1

    PrivateSubnet2:
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${AWS::StackName}-PrivateSubnet2
